{"version":3,"sources":["assets/DSC04973.jpg","components/header.js","components/windowDimensions.js","components/navBar.js","components/about.js","App.js","index.js"],"names":["module","exports","Header","props","useStyletron","css","theme","headerStyles","display","marginTop","marginBottom","paddingTop","paddingBottom","blobColors","array","i","length","j","Math","floor","random","temp","shuffleArray","lightTheme","colors","accent","accent50","accent100","accent200","accent300","accent700","accent600","accent500","accent400","Blob1","styled","position","top","toString","left","fill","animation","transformOrigin","zIndex","Blob2","Blob3","Blob4","Blob5","className","height","width","gridGaps","gridGutters","span","style","paddingLeft","cursor","show","fontSize","paddingBotom","Delay","ms","overflow","viewBox","xmlns","transform","d","getWindowDimensions","window","innerWidth","innerHeight","NavBar","containerStyles","boxSizing","boxShadow","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","borderBottomWidth","backgroundColor","background","$align","ALIGN","margin","center","right","href","checked","toggleChecked","onChange","toggleOnChange","checkmarkType","STYLE_TYPE","toggle_round","labelPlacement","themeName","About","accentColor","overlayInner","bottom","opacity","borderRadius","transition","overlayOuter","paddingRight","maxHeight","align","ALIGNMENT","start","target","skip","src","profile","objectFit","Centered","$theme","justifyContent","alignItems","THEME","primitives","createTheme","darkTheme","createDarkTheme","App","React","setTheme","toggle","setToggle","BackgroundStyles","e","nextToggle","currentTarget","engine","Styletron","ReactDOM","render","value","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39c6da61.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/DSC04973.ed146cf0.jpg\";","import * as React from 'react';\nimport {useStyletron, styled} from 'baseui';\nimport {Grid, Cell, BEHAVIOR, ALIGNMENT} from 'baseui/layout-grid';\nimport {Heading, HeadingLevel} from 'baseui/heading';\nimport Typist from 'react-typist';\nimport { StyledLink } from \"baseui/link\";\nimport {Layer} from 'baseui/layer';\n\n\nimport 'react-typist/dist/Typist.css';\nimport './../blob.scss'\n\nimport { Paragraph1 } from 'baseui/typography';\n\nfunction shuffleArray(array) {\n    for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n}\n\n\nfunction Header(props) {\n    const [css, theme] = useStyletron();\n    const headerStyles = css({\n        display: 'inline-block', marginTop:0, marginBottom: 0, paddingTop: 0, paddingBottom:0,\n      });\n    let blobColors = [];\n    if(props.lightTheme){\n        blobColors = [theme.colors.accent, theme.colors.accent50, theme.colors.accent100, theme.colors.accent200, theme.colors.accent300];\n     } else {\n        blobColors = [theme.colors.accent700, theme.colors.accent600, theme.colors.accent500, theme.colors.accent400, theme.colors.accent300];\n     } \n    shuffleArray(blobColors)\n    // medium blob near name/intro\n    // Possible spawn   top: [-30, -10]     left: [-20, 30]\n    const Blob1 = styled('div', () => {\n        return {\n        position: 'absolute',\n        top: ((Math.random() * -20) - 10).toString() + \"%\",\n        left: ((Math.random() * 50) - 20).toString() + \"%\",\n        fill: blobColors[0],\n        animation: \"move1 60s ease-in-out infinite\",\n        transformOrigin: \"50% 50%\",\n        zIndex: Math.floor(Math.random() * 4),\n        };\n    });\n    // small blob near center\n    // Possible spawn   top: [-10, 40]      left: [-20, 60]\n    const Blob2 = styled('div', () => {\n        return {\n        position: 'absolute',\n        top: ((Math.random() * 50) - 10).toString() + \"%\",\n        left:((Math.random() * 80) - 20).toString() + \"%\",\n        fill: blobColors[1],\n        animation: \"move2 30s ease-in-out infinite\",\n        transformOrigin: \"50% 50%\",\n        zIndex: Math.floor(Math.random() * 2) + 2,\n        };\n    });\n    // large blob on the right\n    // Possible spawn   top: [-30, 40]      left: [55, 70]\n    const Blob3 = styled('div', () => {\n        return {\n        position: 'absolute',\n        top: ((Math.random() * 70) - 30).toString() + \"%\",\n        left:((Math.random() * 15) + 55).toString() + \"%\",\n        fill: blobColors[2],\n        animation: \"move3 70s ease-in-out infinite\",\n        transformOrigin: \"50% 50%\",\n        zIndex: Math.floor(Math.random() * 4),\n        };\n    });\n    // medium blob in the center\n    // Possible spawn   top: [20, 40]       left: [-10, 52]\n    const Blob4 = styled('div', () => {\n        return {\n        position: 'absolute',\n        top: ((Math.random() * 20) + 20).toString() + \"%\",\n        left: ((Math.random() * 62) - 10).toString() + \"%\",\n        fill: blobColors[3],\n        animation: \"move4 70s ease-in-out infinite\",\n        transformOrigin: \"50% 50%\",\n        zIndex: Math.floor(Math.random() * 2),\n        };\n    });\n    // small/medium blob on bottom-right\n    // Possible spawn   top: [-35, 45]      left: [60, 70]\n    const Blob5 = styled('div', () => {\n        return {\n        position: 'absolute',\n        top: ((Math.random() * 80) - 35).toString() + \"%\",\n        left:((Math.random() * 10) + 60).toString() + \"%\",\n        fill: blobColors[4],\n        animation: \"move5 30s ease-in-out infinite\",\n        transformOrigin: \"50% 50%\",\n        zIndex: Math.floor(Math.random() * 4),\n        };\n    });\n    return(\n    <React.Fragment>\n        {/* TODO: add a profile picture and shit or at least a rectangle where a pic should go lol */}\n        <div className={css({height: \"100vh\", width: '100%', zIndex: 5})}>\n            <div className={css({paddingTop: \"125px\"})}>\n            <Grid gridGaps={[0,0,0]} gridGutters={[8,16,32]}>\n            <Cell span={[3, 6, 8]}>\n            <Cell span={[3,6,8]}>\n              <Paragraph1 className={headerStyles} style={{paddingBottom: '50px', paddingLeft: '1vw'}}>Hi, my name is..</Paragraph1>\n            </Cell>\n            <Typist cursor={{show: false}}>\n            <HeadingLevel>\n            <Cell span={[3,6,8]}>\n              <Heading className={headerStyles} style={{fontSize: '15vw', paddingBotom: '50px'}} >Mustafa</Heading>\n            </Cell>\n            <Typist.Delay ms={200} />\n            <Cell span={[3,6,8]}>\n              <Heading style={{fontSize: '15vw', paddingTop: '50px'}}  className={headerStyles}>Sadriwala</Heading>\n            </Cell>\n            <Typist.Delay ms={100} />\n            <Cell span={[3,6,8]}>\n              <Paragraph1 style={{fontSize: '5vw', paddingTop: '20px', paddingLeft: 0}} className={headerStyles}>\n                \"Moose\"\n              </Paragraph1>\n            </Cell>\n            </HeadingLevel>\n            </Typist>\n            <Cell span={[3,6,8]}>\n              {/* <Paragraph1>\n                I'm a fast-learning, honors computer science senior at the University of Texas at Dallas \n                with an affinity for software development, writing, and painting. For a brief explanation \n                of recursion check out my personal website&nbsp;\n                <StyledLink href=\"https://mustafa-sadriwala.github.io/personal_website/\">here!</StyledLink>\n              </Paragraph1> */}\n                <Paragraph1>\n                  I want to help create the future.\n                </Paragraph1>\n            </Cell>\n            </Cell>\n            </Grid>\n            </div>\n        </div>\n        <div className={css({position: 'absolute', top: 0, left: 0, width: '100vw', height: '100%'})}>\n            <div className={css({position: 'relative', height: '100%', overflow: 'hidden', paddingBottom: '250px', marginBottom: '-250px'})}>\n\n            {/* TODO: Make randomizing function to choose random blob, coordinates, and fill color */}\n            {/* POSSIBLE    top: [-40%, 50%] left: [-20%, 75%]*/}\n            {/* IDEAL       top: [-30%, -10%] left: [-20%, 0%] */}\n            <Blob1>\n            <svg width=\"600\" height=\"600\" viewBox=\"0 0 600 600\" xmlns=\"http://www.w3.org/2000/svg\">\n                <g transform=\"translate(300,300)\">\n                    <path d=\"M138.9,-119.1C170,-71.9,178.1,-14.7,168.5,43C159,100.7,131.8,158.9,89.2,175.9C46.6,192.8,-11.4,168.5,-68.2,141.3C-124.9,114.1,-180.4,84,-193.1,40.6C-205.8,-2.8,-175.6,-59.4,-136.3,-108.5C-96.9,-157.6,-48.5,-199.3,2.7,-201.5C53.9,-203.7,107.9,-166.4,138.9,-119.1Z\" />\n                </g>\n            </svg>\n            </Blob1>\n            {/* POSSIBLE    top: [-35%, 40%] left: [-20%, 70%]*/}\n            {/* IDEAL       top: [15%] left: [--]*/}\n            <Blob2>\n            <svg width=\"600\" height=\"600\" viewBox=\"0 0 600 600\" xmlns=\"http://www.w3.org/2000/svg\">\n                <g transform=\"translate(300,300)\">\n                    <path d=\"M152,22C152,58.7,76,117.3,15.5,117.3C-45,117.3,-90,58.7,-90,22C-90,-14.7,-45,-29.3,15.5,-29.3C76,-29.3,152,-14.7,152,22Z\" />\n                </g>\n            </svg>\n            </Blob2>\n            {/* POSSIBLE:   top: [-35%, 40%] left: [-20%, 75%]*/}\n            {/* IDEAL:      top: [--] left: [70%] */}\n            <Blob3>\n            <svg  width=\"600\" height=\"600\" viewBox=\"0 0 600 600\" xmlns=\"http://www.w3.org/2000/svg\">\n                <g transform=\"translate(300,300)\">\n                    <path d=\"M70.2,-92.1C92.4,-48.1,112.7,-24,133.7,21C154.7,66,176.3,132,154.2,160.8C132,189.7,66,181.3,13,168.4C-40.1,155.4,-80.1,137.8,-126.1,109C-172.1,80.1,-224.1,40.1,-230.3,-6.2C-236.6,-52.6,-197.1,-105.1,-151.1,-149.1C-105.1,-193.1,-52.6,-228.6,-14.3,-214.3C24,-200,48.1,-136.1,70.2,-92.1Z\" />\n                </g>\n            </svg>\n            </Blob3>\n            {/* POSSIBLE:   top: [-35%, 35%], left: [-20%, 72%] */}\n            {/* IDEAL:      top: [-] left: [-]*/}\n            <Blob4>\n            <svg width=\"600\" height=\"600\" viewBox=\"0 0 600 600\" xmlns=\"http://www.w3.org/2000/svg\">\n                <g transform=\"translate(300,300)\">\n                    <path d=\"M185.5,-130.3C228.7,-93.7,244,-17.3,218.4,31.7C192.7,80.6,126.1,102,62.5,134.3C-1,166.7,-61.5,209.9,-110.5,198.3C-159.6,186.7,-197.3,120.1,-209.5,52C-221.8,-16.2,-208.6,-86,-169.5,-121.6C-130.3,-157.2,-65.2,-158.6,3,-161C71.1,-163.4,142.3,-166.8,185.5,-130.3Z\"/>\n                </g>\n            </svg>\n            </Blob4>\n            {/* POSSIBLE:   top: [-35%, 40%] left: [-20%, 70%]*/}\n            <Blob5>\n            <svg width=\"600\" height=\"600\" viewBox=\"0 0 600 600\" xmlns=\"http://www.w3.org/2000/svg\">\n                <g transform=\"translate(300,300)\">\n                    <path d=\"M116.5,-85.1C149.7,-51.4,174.3,-3,153.7,14.2C133.2,31.5,67.5,17.5,13,54.3C-41.5,91,-84.8,178.4,-123.4,186.5C-162,194.7,-196.1,123.6,-187.8,68.9C-179.4,14.2,-128.8,-24.1,-90.5,-59C-52.1,-93.9,-26.1,-125.4,7.8,-131.7C41.7,-137.9,83.4,-118.8,116.5,-85.1Z\" />\n                </g>\n            </svg>\n            </Blob5>\n            </div>\n            </div>\n    </React.Fragment>\n);\n};\n\nexport default Header","import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}","import * as React from 'react';\nimport {useStyletron} from 'baseui';\nimport {Button} from 'baseui/button';\nimport {Layer} from 'baseui/layer';\nimport {\n  HeaderNavigation,\n  ALIGN,\n  StyledNavigationList,\n  StyledNavigationItem\n} from \"baseui/header-navigation\";\nimport { StyledLink } from \"baseui/link\";\nimport {Checkbox, STYLE_TYPE} from 'baseui/checkbox';\nimport {H5} from 'baseui/typography';\nimport useWindowDimensions from './windowDimensions';\n\n\n\nfunction NavBar(props) {\n  const [css, theme] = useStyletron();\n  const containerStyles = css({\n    boxSizing: 'border-box',\n    width: '100vw',\n    position: 'fixed',\n    top: '0',\n    left: '0',\n    boxShadow: '0 5px 7px 0 rgba(0,0,0,0.3)',\n    zIndex: 6\n    //backgroundColor: theme.colors.background\n  });\n  const {height, width} = useWindowDimensions();\n\n  return (\n    <React.Fragment>\n        <Layer>\n          <div className={containerStyles}>\n          <HeaderNavigation style={{borderBottomWidth: 0, backgroundColor: `${theme.colors.background}`}}>\n          <StyledNavigationList $align={ALIGN.left}>\n            <StyledNavigationItem>\n              <H5 margin={0}>\n                Mustafa Sadriwala\n              </H5>\n            </StyledNavigationItem>\n          </StyledNavigationList>\n          <StyledNavigationList $align={ALIGN.center} />\n          {(width > 760) && (<StyledNavigationList $align={ALIGN.right}>\n            <StyledNavigationItem>\n              <StyledLink href=\"#basic-link1\">\n                Tab Link One\n              </StyledLink>\n            </StyledNavigationItem>\n            <StyledNavigationItem>\n              <StyledLink href=\"#basic-link2\">\n                Tab Link Two\n              </StyledLink>\n            </StyledNavigationItem>\n          </StyledNavigationList>)}\n          <StyledNavigationList $align={ALIGN.right} style={{'marginRight': '30px'}}>\n            <StyledNavigationItem>\n              <Checkbox\n                checked={props.toggleChecked}\n                onChange={props.toggleOnChange}\n                checkmarkType={STYLE_TYPE.toggle_round}\n                labelPlacement=\"top\"\n              >\n                {props.themeName}\n              </Checkbox>\n            </StyledNavigationItem>\n          </StyledNavigationList>\n          </HeaderNavigation>\n          </div>\n        </Layer>\n    </React.Fragment>\n  );\n};\n\nexport default NavBar","import * as React from 'react';\nimport {useStyletron, styled} from 'baseui';\nimport {Grid, Cell, BEHAVIOR, ALIGNMENT} from 'baseui/layout-grid';\nimport {Heading, HeadingLevel} from 'baseui/heading';\nimport Typist from 'react-typist';\nimport { StyledLink } from \"baseui/link\";\nimport {Layer} from 'baseui/layer';\nimport { Paragraph1 } from 'baseui/typography';\n\nimport profile from './../assets/DSC04973.jpg'\n\n\nfunction About(props){\nconst [css, theme] = useStyletron();\nconst accentColor = (props.lightTheme ? theme.colors.accent50 : theme.colors.accent600)\n\nconst overlayInner = css({\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    height: \"99.5%\",\n    width: \"100%\",\n    opacity: 0.5,\n    borderRadius: '10px',\n    transition: \".5s ease\",\n    backgroundColor: accentColor,\n    ':hover' : {\n        opacity: 0\n    },\n})\nconst headerStyles = css({\n    display: 'inline-block', marginTop:0, marginBottom: 0, paddingTop: 0, paddingBottom:0,\n  });\n\nconst overlayOuter = css({\n    position: \"relative\",\n    borderRadius: '10px',\n    boxShadow: \"25px 22px 0 -5px\" + theme.colors.background + \", 25px 22px 0 0\" + accentColor,\n    transition: \"box-shadow ease 250ms\",\n    ':hover' : {\n        boxShadow: \"15px 12px 0 -5px\" + theme.colors.background + \", 15px 12px 0 0\" + accentColor,\n    }\n})\nreturn (\n    <React.Fragment>\n        <div style={{zIndex: 5, paddingRight: '5vw', maxHeight: '60vh'}}>\n        <Grid gridGutters={[8,16,32]} align={ALIGNMENT.start}>\n            <Cell span={[2,2,6]} >\n            <HeadingLevel>\n            <Heading className={headerStyles}>About Me</Heading>\n            <Paragraph1>\n                I'm a fast-learning, honors computer science senior at the University of Texas at Dallas \n                with an affinity for software development, writing, and painting. For a brief explanation \n                of recursion check out my personal website&nbsp;\n                <StyledLink href=\"https://mustafa-sadriwala.github.io/personal_website/\">here!</StyledLink>\n            </Paragraph1>\n            <Paragraph1>\n                Since being at UTD I've worked with an AI security start-up creating an Android application, \n                interned at JP Morgan & Chase and Facebook, and helped to foster and grow the Computer Science \n                community through the student chapter of the&nbsp;\n                <StyledLink href=\"https://www.acmutd.co/\" target=\"_blank\">ACM at UTD.</StyledLink>\n            </Paragraph1>\n            </HeadingLevel>\n            </Cell>\n            <Cell skip={[0, 1, 2]} span={[2,3,4]}>\n                <div className={overlayOuter}>\n                <img src={profile} style={{width: '100%', objectFit: \"cover\", borderRadius: '10px'}} />\n                <div className={overlayInner} />\n                </div>\n            </Cell>\n        </Grid>\n        </div>\n    </React.Fragment>\n)\n\n\n}\n\nexport default About","import React from 'react';\nimport './App.scss';\nimport {Button, KIND, SIZE, SHAPE} from 'baseui/button';\nimport {DarkTheme, LightTheme, BaseProvider, styled} from 'baseui';\nimport {Layer} from 'baseui/layer';\nimport {useStyletron} from 'baseui';\nimport {Grid, Cell, BEHAVIOR, ALIGNMENT} from 'baseui/layout-grid';\nimport {createTheme, createDarkTheme} from 'baseui';\n\n\nimport 'react-typist/dist/Typist.css';\n\nimport Header from './components/header'\nimport NavBar from './components/navBar';\nimport About from './components/about';\n\n\nconst Centered = styled('div', ({$theme}) => {\n  return {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%',\n    width: '100vw',\n    paddingBottom: '200px',\n  };\n});\n\nconst THEME = {\n  light: 'light',\n  dark: 'dark',\n};\n\n\nconst primitives = {\n  accent: '#F6DDC5',\n  accent50: '#FFCDB2',\n  accent100: '#FFB4A2',\n  accent200: '#F2A69F',\n  accent300: '#E5989B',\n  accent400: '#B5838D',\n  accent500: '#917681',\n  accent600: '#6D6875',\n  accent700: '#4A4754',\n}\n\n\nconst lightTheme = createTheme(primitives);\nconst darkTheme = createDarkTheme(primitives);\n\n\n\nfunction App() {\n  const [theme, setTheme] = React.useState(THEME.light);\n  const [toggle, setToggle] = React.useState(false);\n  const [css, themeVar] = useStyletron();\n  const BackgroundStyles = styled('div', ({$theme}) => {\n    return {\n      backgroundColor: $theme.colors.background\n    }\n  })\n  return (\n      <BaseProvider theme={theme === THEME.light ? lightTheme : darkTheme}>\n        <BackgroundStyles>\n          <Layer>\n            <NavBar \n            toggleChecked={toggle} \n            toggleOnChange={e => {\n              let nextToggle = toggle;\n              nextToggle = e.currentTarget.checked;\n              setToggle(nextToggle);\n              setTheme(theme === THEME.light ? THEME.dark : THEME.light);}}\n            themeName={theme === THEME.light ? 'dark mode' : 'light mode'}\n            />\n          </Layer>\n          <Centered>\n            <Header lightTheme={theme === THEME.light ? true : false}/>\n          </Centered>\n          <Centered>\n            <About lightTheme={theme === THEME.light ? true : false}/>\n          </Centered>\n        </BackgroundStyles>\n      </BaseProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport {Client as Styletron} from 'styletron-engine-atomic';\nimport {Provider as StyletronProvider} from 'styletron-react';\n\nconst engine = new Styletron();\n\n\nReactDOM.render(\n  <StyletronProvider value={engine}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </StyletronProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}