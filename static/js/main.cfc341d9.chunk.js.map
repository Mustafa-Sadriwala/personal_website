{"version":3,"sources":["components/header.js","components/navBar.js","App.js","index.js"],"names":["Header","props","useStyletron","css","headerStyles","display","marginTop","marginBottom","className","height","width","zIndex","paddingTop","cursor","show","span","Delay","ms","href","position","top","left","viewBox","xmlns","transform","d","fill","NavBar","theme","containerStyles","boxSizing","boxShadow","style","borderBottomWidth","backgroundColor","colors","background","$align","ALIGN","margin","center","right","checked","toggleChecked","onChange","toggleOnChange","checkmarkType","STYLE_TYPE","toggle_round","labelPlacement","themeName","Centered","styled","justifyContent","alignItems","$theme","backgroundAccent","THEME","App","React","useState","setTheme","toggle","setToggle","LightTheme","DarkTheme","e","nextToggle","currentTarget","engine","Styletron","ReactDOM","render","value","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cfc341d9.chunk.js","sourcesContent":["import * as React from 'react';\nimport {useStyletron} from 'baseui';\nimport {Grid, Cell, BEHAVIOR, ALIGNMENT} from 'baseui/layout-grid';\nimport {Heading, HeadingLevel} from 'baseui/heading';\nimport Typist from 'react-typist';\nimport { StyledLink } from \"baseui/link\";\nimport {Layer} from 'baseui/layer';\n\n\nimport 'react-typist/dist/Typist.css';\n\nimport { Paragraph1 } from 'baseui/typography';\n\nfunction Header(props) {\n    const [css] = useStyletron();\n    const headerStyles = css({\n        display: 'inline-block', marginTop:0, marginBottom: 0\n      });\n    return(\n    <React.Fragment>\n        {/* TODO: add a profile picture and shit or at least a rectangle where a pic should go lol */}\n        <div className={css({height: \"100vh\", width: '100%', zIndex: 1})}>\n            <div className={css({paddingTop: \"110px\"})}>\n            <Grid>\n            <Typist cursor={{show: false}}>\n            <HeadingLevel>\n            <Cell span={[3,6,8]}>\n              <Heading className={headerStyles}>Mustafa</Heading>\n            </Cell>\n            <Typist.Delay ms={200} />\n            <Cell span={[2,4,6]}>\n              <Heading className={headerStyles}>Sadriwala</Heading>\n            </Cell>\n            <Typist.Delay ms={100} />\n            <Cell>\n              <Paragraph1 className={headerStyles}>\n                \"Moose\"\n              </Paragraph1>\n            </Cell>\n            </HeadingLevel>\n            </Typist>\n            </Grid>\n            <Grid>\n            <Cell span={[3,6,8]}>\n              <Paragraph1>\n                A fast-learning, honors computer science senior at the University of Texas at Dallas \n                with an affinity for software development, writing, and painting. For a brief explanation \n                of recursion check out my personal website  <empty></empty>\n                <StyledLink href=\"https://mustafa-sadriwala.github.io/personal_website/\">here!</StyledLink>\n              </Paragraph1>\n            </Cell>\n            </Grid>\n            </div>\n        </div>\n        <Layer>\n            {/* TODO: Make randomizing function to choose random blob, coordinates, and fill color */}\n            {/* POSSIBLE    top: [-40%, 50%] left: [-20%, 75%]*/}\n            {/* IDEAL       top: [-30%, -10%] left: [-20%, 0%] */}\n            <div className={css({position: 'absolute',top: '-20%',left: '-10%',width: '100%'})}>\n            <svg width=\"600\" height=\"600\" viewBox=\"0 0 600 600\" xmlns=\"http://www.w3.org/2000/svg\">\n                <g transform=\"translate(300,300)\">\n                    <path d=\"M138.9,-119.1C170,-71.9,178.1,-14.7,168.5,43C159,100.7,131.8,158.9,89.2,175.9C46.6,192.8,-11.4,168.5,-68.2,141.3C-124.9,114.1,-180.4,84,-193.1,40.6C-205.8,-2.8,-175.6,-59.4,-136.3,-108.5C-96.9,-157.6,-48.5,-199.3,2.7,-201.5C53.9,-203.7,107.9,-166.4,138.9,-119.1Z\" fill=\"#FFB4BC\" />\n                </g>\n            </svg>\n            </div>\n            {/* POSSIBLE    top: [-35%, 40%] left: [-20%, 70%]*/}\n            {/* IDEAL       top: [15%] left: [--]*/}\n            <div className={css({position: 'absolute',top: '-10%',left:'25%',width: '100%'})}>\n            <svg width=\"600\" height=\"600\" viewBox=\"0 0 600 600\" xmlns=\"http://www.w3.org/2000/svg\">\n                <g transform=\"translate(300,300)\">\n                    <path d=\"M152,22C152,58.7,76,117.3,15.5,117.3C-45,117.3,-90,58.7,-90,22C-90,-14.7,-45,-29.3,15.5,-29.3C76,-29.3,152,-14.7,152,22Z\" fill=\"#FFFFBF\" />\n                </g>\n            </svg>\n            </div>\n            {/* POSSIBLE:   top: [-35%, 40%] left: [-20%, 75%]*/}\n            {/* IDEAL:      top: [--] left: [70%] */}\n            <div className={css({position: 'absolute',top: '0%',left: '70%',width: '100%'})}>\n            <svg  width=\"600\" height=\"600\" viewBox=\"0 0 600 600\" xmlns=\"http://www.w3.org/2000/svg\">\n                <g transform=\"translate(300,300)\">\n                    <path d=\"M70.2,-92.1C92.4,-48.1,112.7,-24,133.7,21C154.7,66,176.3,132,154.2,160.8C132,189.7,66,181.3,13,168.4C-40.1,155.4,-80.1,137.8,-126.1,109C-172.1,80.1,-224.1,40.1,-230.3,-6.2C-236.6,-52.6,-197.1,-105.1,-151.1,-149.1C-105.1,-193.1,-52.6,-228.6,-14.3,-214.3C24,-200,48.1,-136.1,70.2,-92.1Z\" fill=\"#FFBBA0\" />\n                </g>\n            </svg>\n            </div>\n            {/* POSSIBLE:   top: [-35%, 35%], left: [-20%, 72%] */}\n            {/* IDEAL:      top: [-] left: [-]*/}\n            <div className={css({position: 'absolute',top: '20%',left: '25%',width: '100%'})}>\n            <svg width=\"600\" height=\"600\" viewBox=\"0 0 600 600\" xmlns=\"http://www.w3.org/2000/svg\">\n                <g transform=\"translate(300,300)\">\n                    <path d=\"M185.5,-130.3C228.7,-93.7,244,-17.3,218.4,31.7C192.7,80.6,126.1,102,62.5,134.3C-1,166.7,-61.5,209.9,-110.5,198.3C-159.6,186.7,-197.3,120.1,-209.5,52C-221.8,-16.2,-208.6,-86,-169.5,-121.6C-130.3,-157.2,-65.2,-158.6,3,-161C71.1,-163.4,142.3,-166.8,185.5,-130.3Z\" fill=\"#FF6FAC\" />\n                </g>\n            </svg>\n            </div>\n        </Layer>\n    </React.Fragment>\n);\n};\n\nexport default Header","import * as React from 'react';\nimport {useStyletron} from 'baseui';\nimport {Button} from 'baseui/button';\nimport {Layer} from 'baseui/layer';\nimport {\n  HeaderNavigation,\n  ALIGN,\n  StyledNavigationList,\n  StyledNavigationItem\n} from \"baseui/header-navigation\";\nimport { StyledLink } from \"baseui/link\";\nimport {Checkbox, STYLE_TYPE} from 'baseui/checkbox';\nimport {H5} from 'baseui/typography'\n\n\n\nfunction NavBar(props) {\n  const [css, theme] = useStyletron();\n  const containerStyles = css({\n    boxSizing: 'border-box',\n    width: '100vw',\n    position: 'fixed',\n    top: '0',\n    left: '0',\n    boxShadow: '0 5px 7px 0 rgba(0,0,0,0.3)',\n    zIndex: 2\n    //backgroundColor: theme.colors.background\n  });\n  return (\n    <React.Fragment>\n        <Layer>\n          <div className={containerStyles}>\n          <HeaderNavigation style={{borderBottomWidth: 0, backgroundColor: `${theme.colors.background}`}}>\n          <StyledNavigationList $align={ALIGN.left}>\n            <StyledNavigationItem>\n              <H5 margin={0}>\n                Mustafa Sadriwala\n              </H5>\n            </StyledNavigationItem>\n          </StyledNavigationList>\n          <StyledNavigationList $align={ALIGN.center} />\n          <StyledNavigationList $align={ALIGN.right}>\n            <StyledNavigationItem>\n              <StyledLink href=\"#basic-link1\">\n                Tab Link One\n              </StyledLink>\n            </StyledNavigationItem>\n            <StyledNavigationItem>\n              <StyledLink href=\"#basic-link2\">\n                Tab Link Two\n              </StyledLink>\n            </StyledNavigationItem>\n          </StyledNavigationList>\n          <StyledNavigationList $align={ALIGN.right} style={{'marginRight': '30px'}}>\n            <StyledNavigationItem>\n              <Checkbox\n                checked={props.toggleChecked}\n                onChange={props.toggleOnChange}\n                checkmarkType={STYLE_TYPE.toggle_round}\n                labelPlacement=\"top\"\n              >\n                {props.themeName}\n              </Checkbox>\n            </StyledNavigationItem>\n          </StyledNavigationList>\n          </HeaderNavigation>\n          </div>\n        </Layer>\n    </React.Fragment>\n  );\n};\n\nexport default NavBar","import React from 'react';\nimport './App.scss';\nimport {Button, KIND, SIZE, SHAPE} from 'baseui/button';\nimport {DarkTheme, LightTheme, BaseProvider, styled} from 'baseui';\nimport {Layer} from 'baseui/layer';\nimport {useStyletron} from 'baseui';\nimport {Grid, Cell, BEHAVIOR, ALIGNMENT} from 'baseui/layout-grid';\n\n\nimport 'react-typist/dist/Typist.css';\n\nimport Header from './components/header'\nimport NavBar from './components/navBar';\n\n\nconst Centered = styled('div', ({$theme}) => {\n  return {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%',\n    width: '100wh',\n    backgroundColor: $theme.colors.backgroundAccent\n  };\n});\n\nconst THEME = {\n  light: 'light',\n  dark: 'dark',\n};\n\n\n\nfunction App() {\n  const [theme, setTheme] = React.useState(THEME.light);\n  const [toggle, setToggle] = React.useState(false);\n  const [css] = useStyletron();\n  return (\n      <BaseProvider theme={theme === THEME.light ? LightTheme : DarkTheme}>\n        <Layer>\n        <NavBar \n        toggleChecked={toggle} \n        toggleOnChange={e => {\n          let nextToggle = toggle;\n          nextToggle = e.currentTarget.checked;\n          setToggle(nextToggle);\n          setTheme(theme === THEME.light ? THEME.dark : THEME.light);}}\n        themeName={theme === THEME.light ? 'dark mode' : 'light mode'}\n      />\n        </Layer>\n        <Centered>\n        <Header/>\n        </Centered>\n      </BaseProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport {Client as Styletron} from 'styletron-engine-atomic';\nimport {Provider as StyletronProvider} from 'styletron-react';\n\nconst engine = new Styletron();\n\n\nReactDOM.render(\n  <StyletronProvider value={engine}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </StyletronProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}