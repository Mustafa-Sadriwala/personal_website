{"version":3,"sources":["assets/DSC04973.jpg","components/header.js","components/windowDimensions.js","components/navBar.js","components/about.js","components/blobs.js","components/work.js","App.js","index.js"],"names":["module","exports","Header","props","useStyletron","css","headerStyles","display","marginTop","marginBottom","paddingTop","paddingBottom","className","height","width","zIndex","gridGaps","gridGutters","span","style","paddingLeft","cursor","show","fontSize","paddingBotom","Delay","ms","getWindowDimensions","window","innerWidth","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","NavBar","theme","containerStyles","boxSizing","position","top","left","boxShadow","colorBackground","lightTheme","colors","accent50","accent600","borderBottomWidth","backgroundColor","$align","ALIGN","margin","center","right","href","checked","toggleChecked","onChange","toggleOnChange","checkmarkType","STYLE_TYPE","toggle_round","labelPlacement","themeName","About","accentColor","overlayInner","bottom","opacity","borderRadius","transition","overlayOuter","transform","content","border","paddingRight","maxHeight","align","ALIGNMENT","start","target","skip","src","profile","objectFit","shuffleArray","array","i","length","j","Math","floor","random","temp","newBlobColors","blobs","blobColors","undefined","newBlobs","color","Blobs","updateState","setUpdateState","randomBlobs","setRandomBlobs","initialBlobs","setInitialBlobs","didMountRef","useRef","accent","accent100","accent200","accent300","accent700","accent500","accent400","current","initialBlobsArr","push","toString","createInitialBlobs","windowHeight","blobArr","console","log","paths","animations","timingForAnimations","docHeight","document","body","offsetHeight","round","createBlobs","Fragment","overflow","map","blob","index","key","transformOrigin","fill","animation","viewBox","xmlns","d","path","animationTime","MENU_PROJECTS","label","CARD_PROJECTS","title","location","date","bullets","technologies","Work","menuItemChosen","setMenuItemChosen","accentColorInverse","selectedMenuItemColor","contentPrimary","StyledListItem","styled","$theme","listStyle","StyledList","paddingInlineStart","paddingInlineEnd","paragraphStyles","marginBlockEnd","marginBlockStart","gridMargins","justifyContent","items","onItemSelect","item","overrides","Option","getItemLabel","children","List","$isFocusVisible","overflowY","bullet","tech","closeable","kind","variant","VARIANT","light","Centered","alignItems","scrollMarginTop","THEME","primitives","createTheme","darkTheme","createDarkTheme","App","React","setTheme","toggle","setToggle","BackgroundStyles","background","e","nextToggle","currentTarget","id","engine","Styletron","ReactDOM","render","value","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.86f78f69.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/DSC04973.ed146cf0.jpg\";","import * as React from 'react';\nimport {useStyletron, styled} from 'baseui';\nimport {Grid, Cell, BEHAVIOR, ALIGNMENT} from 'baseui/layout-grid';\nimport {Heading, HeadingLevel} from 'baseui/heading';\nimport Typist from 'react-typist';\nimport { StyledLink } from \"baseui/link\";\nimport {Layer} from 'baseui/layer';\n\n\nimport 'react-typist/dist/Typist.css';\n\nimport { Paragraph1 } from 'baseui/typography';\n\n\nfunction Header(props) {\n    const [css, theme] = useStyletron();\n    const headerStyles = css({\n        display: 'inline-block', marginTop:0, marginBottom: 0, paddingTop: 0, paddingBottom:0,\n      });\n    return(\n    <React.Fragment>\n        <div className={css({height: \"100vh\", width: '100%', zIndex: 5})}>\n            <div className={css({paddingTop: \"125px\"})}>\n            <Grid gridGaps={[0,0,0]} gridGutters={[8,16,32]}>\n            <Cell span={[3, 6, 8]}>\n            <Cell span={[3,6,8]}>\n              <Paragraph1 className={headerStyles} style={{paddingBottom: '50px', paddingLeft: '1vw'}}>Hi, my name is..</Paragraph1>\n            </Cell>\n            <Typist cursor={{show: false}}>\n            <HeadingLevel>\n            <Cell span={[3,6,8]}>\n              <Heading className={headerStyles} style={{fontSize: '15vw', paddingBotom: '50px'}} >Mustafa</Heading>\n            </Cell>\n            <Typist.Delay ms={200} />\n            <Cell span={[3,6,8]}>\n              <Heading style={{fontSize: '15vw', paddingTop: '50px'}}  className={headerStyles}>Sadriwala</Heading>\n            </Cell>\n            <Typist.Delay ms={100} />\n            <Cell span={[3,6,8]}>\n              <Paragraph1 style={{fontSize: '5vw', paddingTop: '20px', paddingLeft: 0}} className={headerStyles}>\n                \"Moose\"\n              </Paragraph1>\n            </Cell>\n            </HeadingLevel>\n            </Typist>\n            <Cell span={[3,6,8]}>\n              {/* <Paragraph1>\n                I'm a fast-learning, honors computer science senior at the University of Texas at Dallas \n                with an affinity for software development, writing, and painting. For a brief explanation \n                of recursion check out my personal website&nbsp;\n                <StyledLink href=\"https://mustafa-sadriwala.github.io/personal_website/\">here!</StyledLink>\n              </Paragraph1> */}\n                <Paragraph1 style={{paddingLeft: '1vw'}}>\n                  I want to help create the future.\n                </Paragraph1>\n            </Cell>\n            </Cell>\n            </Grid>\n            </div>\n        </div>\n    </React.Fragment>\n);\n};\n\nexport default Header","import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}","import * as React from 'react';\nimport {useStyletron} from 'baseui';\nimport {Button} from 'baseui/button';\nimport {Layer} from 'baseui/layer';\nimport {\n  HeaderNavigation,\n  ALIGN,\n  StyledNavigationList,\n  StyledNavigationItem\n} from \"baseui/header-navigation\";\nimport { StyledLink } from \"baseui/link\";\nimport {Checkbox, STYLE_TYPE} from 'baseui/checkbox';\nimport {H5} from 'baseui/typography';\nimport useWindowDimensions from './windowDimensions';\n\n\n\nfunction NavBar(props) {\n  const [css, theme] = useStyletron();\n  const containerStyles = css({\n    boxSizing: 'border-box',\n    width: '100vw',\n    position: 'fixed',\n    top: '0',\n    left: '0',\n    boxShadow: '0 5px 7px 0 rgba(0,0,0,0.3)',\n    zIndex: 6,\n    //backgroundColor: theme.colors.accent100\n  });\n  const {height, width} = useWindowDimensions();\n  const colorBackground = props.lightTheme ? theme.colors.accent50 : theme.colors.accent600;\n\n  return (\n    <React.Fragment>\n        <Layer>\n          <div className={containerStyles}>\n          <HeaderNavigation style={{borderBottomWidth: 0, backgroundColor: colorBackground}}>\n          <StyledNavigationList $align={ALIGN.left}>\n            <StyledNavigationItem>\n              <H5 margin={0}>\n                Mustafa Sadriwala\n              </H5>\n            </StyledNavigationItem>\n          </StyledNavigationList>\n          <StyledNavigationList $align={ALIGN.center} />\n          {(width > 760) && (<StyledNavigationList $align={ALIGN.right}>\n            <StyledNavigationItem>\n              <StyledLink href=\"#about\">\n                About\n              </StyledLink>\n            </StyledNavigationItem>\n            <StyledNavigationItem>\n              <StyledLink href=\"#work\">\n                Experience\n              </StyledLink>\n            </StyledNavigationItem>\n          </StyledNavigationList>)}\n          <StyledNavigationList $align={ALIGN.right} style={{'marginRight': '30px'}}>\n            <StyledNavigationItem>\n              <Checkbox\n                checked={props.toggleChecked}\n                onChange={props.toggleOnChange}\n                checkmarkType={STYLE_TYPE.toggle_round}\n                labelPlacement=\"top\"\n              >\n                {props.themeName}\n              </Checkbox>\n            </StyledNavigationItem>\n          </StyledNavigationList>\n          </HeaderNavigation>\n          </div>\n        </Layer>\n    </React.Fragment>\n  );\n};\n\nexport default NavBar","import * as React from 'react';\nimport {useStyletron, styled} from 'baseui';\nimport {Grid, Cell, BEHAVIOR, ALIGNMENT} from 'baseui/layout-grid';\nimport {Heading, HeadingLevel} from 'baseui/heading';\nimport Typist from 'react-typist';\nimport { StyledLink } from \"baseui/link\";\nimport {Layer} from 'baseui/layer';\nimport { Paragraph1 } from 'baseui/typography';\n\nimport profile from './../assets/DSC04973.jpg'\n\n\nfunction About(props){\nconst [css, theme] = useStyletron();\nconst accentColor = (props.lightTheme ? theme.colors.accent50 : theme.colors.accent600)\n\nconst overlayInner = css({\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    height: \"99.5%\",\n    width: \"100%\",\n    opacity: 0.5,\n    borderRadius: '10px',\n    transition: \".5s ease\",\n    backgroundColor: accentColor,\n    ':hover' : {\n        opacity: 0\n    },\n})\nconst headerStyles = css({\n    display: 'inline-block', marginTop:0, marginBottom: 0, paddingTop: 0, paddingBottom:0,\n  });\n\nconst overlayOuter = css({\n    position: \"relative\",\n    ':hover' : {\n        '::before' : {\n            transform: 'translate(10px, 8px)',\n        }\n    },\n    '::before' : {\n        content: '\"\"',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: -1,\n        boxSizing: 'border-box',\n        border: '5px solid ' + accentColor,\n        transform: 'translate(20px, 18px)',\n        transition: 'transform ease .2s',\n        borderRadius: '10px',\n    }\n})\nreturn (\n    <React.Fragment>\n        <div style={{zIndex: 5, paddingRight: '5vw', maxHeight: '60vh'}}>\n        <Grid gridGutters={[8,16,32]} align={ALIGNMENT.start}>\n            <Cell span={[2,2,6]} >\n            <HeadingLevel>\n            <Heading className={headerStyles}>About Me</Heading>\n            <Paragraph1>\n                I'm a fast-learning, honors computer science senior at the University of Texas at Dallas \n                with an affinity for software development, writing, and painting. For a brief explanation \n                of recursion check out my personal website&nbsp;\n                <StyledLink href=\"#\">here!</StyledLink>\n            </Paragraph1>\n            <Paragraph1>\n                Since being at UTD I've worked with an AI security start-up creating an Android application, \n                interned at JP Morgan & Chase and Facebook, and helped to foster and grow the Computer Science \n                community through the student chapter of the&nbsp;\n                <StyledLink href=\"https://www.acmutd.co/\" target=\"_blank\">ACM at UTD.</StyledLink>\n            </Paragraph1>\n            </HeadingLevel>\n            </Cell>\n            <Cell skip={[0, 1, 2]} span={[2,3,4]}>\n                <div className={overlayOuter}>\n                <img src={profile} style={{width: '100%', objectFit: \"cover\", borderRadius: '10px'}} />\n                <div className={overlayInner} />\n                </div>\n            </Cell>\n        </Grid>\n        </div>\n    </React.Fragment>\n)\n\n\n}\n\nexport default About","import './../blob.scss'\nimport React, { useState, useEffect, useRef } from 'react';\nimport {useStyletron, styled} from 'baseui';\nimport useWindowDimensions from './windowDimensions';\n\n\n// {window.document.body.offsetHeight}\n\n\nfunction shuffleArray(array) {\n    for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n}\n\nfunction createInitialBlobs(blobColors) {\n    let initialBlobsArr = [];\n\n    // medium blob near name/intro\n    // Possible spawn   top: [-17, -5]     left: [-20, 20]\n    initialBlobsArr.push({\n        \"color\": blobColors[0],\n        \"path\": \"M138.9,-119.1C170,-71.9,178.1,-14.7,168.5,43C159,100.7,131.8,158.9,89.2,175.9C46.6,192.8,-11.4,168.5,-68.2,141.3C-124.9,114.1,-180.4,84,-193.1,40.6C-205.8,-2.8,-175.6,-59.4,-136.3,-108.5C-96.9,-157.6,-48.5,-199.3,2.7,-201.5C53.9,-203.7,107.9,-166.4,138.9,-119.1Z\",\n        \"animation\": \"move1 60s ease-in-out infinite\",\n        \"zIndex\": Math.floor(Math.random() * 4),\n        \"top\": ((Math.random() * 12) - 17).toString() + \"%\",\n        \"left\": ((Math.random() * 40) - 20).toString() + \"%\",\n    })\n\n    // small blob near center\n    // Possible spawn   top: [0, 10]      left: [-20, 60]\n    initialBlobsArr.push({\n        \"color\": blobColors[1],\n        \"path\": \"M152,22C152,58.7,76,117.3,15.5,117.3C-45,117.3,-90,58.7,-90,22C-90,-14.7,-45,-29.3,15.5,-29.3C76,-29.3,152,-14.7,152,22Z\",\n        \"animation\": \"move2 30s ease-in-out infinite\",\n        \"zIndex\": Math.floor(Math.random() * 2) + 2,\n        \"top\": ((Math.random() * 10)).toString() + \"%\",\n        \"left\":((Math.random() * 70) - 10).toString() + \"%\",\n    })\n\n    // large blob on the right\n    // Possible spawn   top: [-15, 20]      left: [55, 70]\n    initialBlobsArr.push({\n        \"color\": blobColors[2],\n        \"path\": \"M70.2,-92.1C92.4,-48.1,112.7,-24,133.7,21C154.7,66,176.3,132,154.2,160.8C132,189.7,66,181.3,13,168.4C-40.1,155.4,-80.1,137.8,-126.1,109C-172.1,80.1,-224.1,40.1,-230.3,-6.2C-236.6,-52.6,-197.1,-105.1,-151.1,-149.1C-105.1,-193.1,-52.6,-228.6,-14.3,-214.3C24,-200,48.1,-136.1,70.2,-92.1Z\",\n        \"animation\": \"move3 70s ease-in-out infinite\",\n        \"zIndex\": Math.floor(Math.random() * 4),\n        \"top\": ((Math.random() * 35) - 15).toString() + \"%\",\n        \"left\": ((Math.random() * 15) + 55).toString() + \"%\",\n    })\n\n    // medium blob in the center\n    // Possible spawn   top: [8, 20]       left: [-10, 52]\n    initialBlobsArr.push({\n        \"color\": blobColors[3],\n        \"path\": \"M185.5,-130.3C228.7,-93.7,244,-17.3,218.4,31.7C192.7,80.6,126.1,102,62.5,134.3C-1,166.7,-61.5,209.9,-110.5,198.3C-159.6,186.7,-197.3,120.1,-209.5,52C-221.8,-16.2,-208.6,-86,-169.5,-121.6C-130.3,-157.2,-65.2,-158.6,3,-161C71.1,-163.4,142.3,-166.8,185.5,-130.3Z\",\n        \"top\": ((Math.random() * 12) + 8).toString() + \"%\",\n        \"left\": ((Math.random() * 62) - 10).toString() + \"%\",\n        \"animation\": \"move4 70s ease-in-out infinite\",\n        \"zIndex\": Math.floor(Math.random() * 2),\n    })\n\n    // small/medium blob on bottom-right\n    // Possible spawn   top: [-10, 20]      left: [60, 70]\n    initialBlobsArr.push({\n        \"color\": blobColors[4],\n        \"path\": \"M116.5,-85.1C149.7,-51.4,174.3,-3,153.7,14.2C133.2,31.5,67.5,17.5,13,54.3C-41.5,91,-84.8,178.4,-123.4,186.5C-162,194.7,-196.1,123.6,-187.8,68.9C-179.4,14.2,-128.8,-24.1,-90.5,-59C-52.1,-93.9,-26.1,-125.4,7.8,-131.7C41.7,-137.9,83.4,-118.8,116.5,-85.1Z\",\n        \"top\": ((Math.random() * 30) - 10).toString() + \"%\",\n        \"left\":((Math.random() * 10) + 60).toString() + \"%\",\n        \"animation\": \"move5 30s ease-in-out infinite\",\n        \"zIndex\": Math.floor(Math.random() * 4),\n    })\n    return initialBlobsArr\n\n}\n\nfunction createBlobs(blobColors, windowHeight) {\n    let blobArr = [];\n    console.log(\"is the method being called?\");\n    const paths = [\"M116.5,-85.1C149.7,-51.4,174.3,-3,153.7,14.2C133.2,31.5,67.5,17.5,13,54.3C-41.5,91,-84.8,178.4,-123.4,186.5C-162,194.7,-196.1,123.6,-187.8,68.9C-179.4,14.2,-128.8,-24.1,-90.5,-59C-52.1,-93.9,-26.1,-125.4,7.8,-131.7C41.7,-137.9,83.4,-118.8,116.5,-85.1Z\",\n\"M185.5,-130.3C228.7,-93.7,244,-17.3,218.4,31.7C192.7,80.6,126.1,102,62.5,134.3C-1,166.7,-61.5,209.9,-110.5,198.3C-159.6,186.7,-197.3,120.1,-209.5,52C-221.8,-16.2,-208.6,-86,-169.5,-121.6C-130.3,-157.2,-65.2,-158.6,3,-161C71.1,-163.4,142.3,-166.8,185.5,-130.3Z\",\n\"M70.2,-92.1C92.4,-48.1,112.7,-24,133.7,21C154.7,66,176.3,132,154.2,160.8C132,189.7,66,181.3,13,168.4C-40.1,155.4,-80.1,137.8,-126.1,109C-172.1,80.1,-224.1,40.1,-230.3,-6.2C-236.6,-52.6,-197.1,-105.1,-151.1,-149.1C-105.1,-193.1,-52.6,-228.6,-14.3,-214.3C24,-200,48.1,-136.1,70.2,-92.1Z\",\n\"M152,22C152,58.7,76,117.3,15.5,117.3C-45,117.3,-90,58.7,-90,22C-90,-14.7,-45,-29.3,15.5,-29.3C76,-29.3,152,-14.7,152,22Z\",\n\"M138.9,-119.1C170,-71.9,178.1,-14.7,168.5,43C159,100.7,131.8,158.9,89.2,175.9C46.6,192.8,-11.4,168.5,-68.2,141.3C-124.9,114.1,-180.4,84,-193.1,40.6C-205.8,-2.8,-175.6,-59.4,-136.3,-108.5C-96.9,-157.6,-48.5,-199.3,2.7,-201.5C53.9,-203.7,107.9,-166.4,138.9,-119.1Z\",\n\"M136.8,-83.2C174.9,-13,201.8,59.5,177.1,121.7C152.4,184,76.2,236,11.4,229.4C-53.4,222.8,-106.8,157.7,-124.1,99.7C-141.5,41.7,-122.7,-9.2,-96,-72.7C-69.3,-136.3,-34.6,-212.7,7.4,-216.9C49.4,-221.2,98.7,-153.3,136.8,-83.2Z\",\n\"M112.8,-90.3C145.3,-49.2,170.1,-2.3,171,57.1C171.8,116.5,148.6,188.4,95.7,223.3C42.8,258.3,-39.8,256.2,-85.4,218.4C-131,180.7,-139.6,107.2,-157.8,34.1C-175.9,-39,-203.7,-111.8,-179,-151.1C-154.3,-190.4,-77.1,-196.2,-18.5,-181.4C40.1,-166.7,80.3,-131.3,112.8,-90.3Z\",\n\"M185.5,-130.3C228.7,-93.7,244,-17.3,218.4,31.7C192.7,80.6,126.1,102,62.5,134.3C-1,166.7,-61.5,209.9,-110.5,198.3C-159.6,186.7,-197.3,120.1,-209.5,52C-221.8,-16.2,-208.6,-86,-169.5,-121.6C-130.3,-157.2,-65.2,-158.6,3,-161C71.1,-163.4,142.3,-166.8,185.5,-130.3Z\"];\n\n    const animations = [\"move1\", \"move2\", \"move3\", \"move4\", \"move5\", \"move6\", \"move7\", \"move8\"];\n    const timingForAnimations = [\"30s\", \"40s\", \"50s\", \"60s\", \"70s\", \"80s\", \"90s\"];\n    let docHeight = window.document.body.offsetHeight;\n    console.log(\"the doc height is: \" + docHeight);\n    for(let i = windowHeight; i < docHeight; i += windowHeight){\n        let j = Math.floor((Math.random() * 2));\n        shuffleArray(paths);\n        shuffleArray(animations);\n        shuffleArray(timingForAnimations);\n        shuffleArray(blobColors);\n        while (j >= 0){\n            blobArr.push({\n                \"color\": blobColors[j],\n                \"path\": paths[j],\n                \"animation\": animations[j],\n                \"animationTime\": timingForAnimations[j],\n                \"top\": (Math.random() * windowHeight + i).toString() + 'px',\n                \"left\": ((Math.random() * 95) - 15).toString() + '%',\n                \"zIndex\": Math.round(Math.random() * 4)\n            });\n            j--;\n        }\n    }\n    return blobArr;\n}\n\nfunction newBlobColors(blobs, blobColors) {\n    if (blobs === undefined)\n        return blobs\n    let newBlobs = blobs;\n    for (let i = 0; i < newBlobs.length; i++) {\n        newBlobs[i].color = blobColors[i % blobColors.length];\n    }\n    return newBlobs;\n}\n\nconst Blobs = (props) => {\n    const [css, theme] = useStyletron();\n    const [updateState, setUpdateState] = useState(false);\n    const [randomBlobs, setRandomBlobs] = useState();\n    const [initialBlobs, setInitialBlobs] = useState();\n    const didMountRef = useRef(false)\n\n\n    let blobColors = [];\n    if(props.lightTheme){\n        blobColors = [theme.colors.accent, theme.colors.accent50, theme.colors.accent100, theme.colors.accent200, theme.colors.accent300];\n     } else {\n        blobColors = [theme.colors.accent700, theme.colors.accent600, theme.colors.accent500, theme.colors.accent400, theme.colors.accent300];\n     } \n    const {height, width} = useWindowDimensions();\n\n    useEffect(() => {\n        if(props.lightTheme){\n            blobColors = [theme.colors.accent, theme.colors.accent50, theme.colors.accent100, theme.colors.accent200, theme.colors.accent300];\n         } else {\n            blobColors = [theme.colors.accent700, theme.colors.accent600, theme.colors.accent500, theme.colors.accent400, theme.colors.accent300];\n         } \n        if(!didMountRef.current) {\n            shuffleArray(blobColors);\n            setInitialBlobs(createInitialBlobs(blobColors));\n            shuffleArray(blobColors);\n            setRandomBlobs(createBlobs(blobColors, height));\n            didMountRef.current = true;\n        } else {\n            shuffleArray(blobColors);\n            setInitialBlobs(newBlobColors(initialBlobs, blobColors));\n            shuffleArray(blobColors);\n            setRandomBlobs(newBlobColors(randomBlobs, blobColors));\n            setUpdateState(!updateState);\n        }\n    }, [props.lightTheme]);\n\n    return (\n        <React.Fragment>\n        <div className={css({position: 'absolute', top: 0, left: 0, bottom: 0, right: 0, overflow: 'hidden'})}>\n        <div className={css({position: 'relative', height: '100%', overflow: 'hidden', paddingBottom: '200px', marginBottom: '-250px'})}>\n\n        {/* TODO: Make randomizing function to choose random blob, coordinates, and fill color */}\n        {/* POSSIBLE    top: [-40%, 50%] left: [-20%, 75%]*/}\n        {/* IDEAL       top: [-30%, -10%] left: [-20%, 0%] */}\n        {initialBlobs !== undefined && initialBlobs.map((blob, index) => (\n            <div key={index} style={{position: 'absolute', transformOrigin: '50% 50%', top: `${blob.top}`, left: `${blob.left}`, zIndex: `${blob.zIndex}`, fill: `${blob.color}`, animation: `${blob.animation}`}}>\n               <svg width=\"600\" height=\"600\" viewBox=\"0 0 600 600\" xmlns=\"http://www.w3.org/2000/svg\">\n                <g transform=\"translate(300,300)\">\n                <path d={blob.path} />\n                </g>\n                </svg>\n            </div>\n        ))\n        }\n        {randomBlobs !== undefined && randomBlobs.map((blob, index) => (\n            <div key={index} style={{position: 'absolute', transformOrigin: '50% 50%', top: `${blob.top}`, left: `${blob.left}`, zIndex: `${blob.zIndex}`, fill: `${blob.color}`, animation: `${blob.animation + ' ' + blob.animationTime + ' ease-in-out infinite'}`}}>\n               <svg width=\"600\" height=\"600\" viewBox=\"0 0 600 600\" xmlns=\"http://www.w3.org/2000/svg\">\n                <g transform=\"translate(300,300)\">\n                <path d={blob.path} />\n                </g>\n                </svg>\n            </div>\n        ))\n        }\n        </div>\n        </div>\n        </React.Fragment>\n    );\n};\n\nexport default Blobs","import React, {useState} from 'react';\nimport {useStyletron, styled} from 'baseui';\nimport {Grid, Cell, BEHAVIOR, ALIGNMENT} from 'baseui/layout-grid';\nimport {Heading, HeadingLevel} from 'baseui/heading';\nimport Typist from 'react-typist';\nimport { StyledLink } from \"baseui/link\";\nimport {Layer as div} from 'baseui/layer';\nimport {StatefulMenu} from 'baseui/menu';\nimport {Card, StyledContents, StyledBody} from 'baseui/card';\nimport { Paragraph1, H1, H2, H5, H6, H4 } from 'baseui/typography';\nimport { Tag, VARIANT} from 'baseui/tag';\n\nimport blob from './../assets/DSC04973.jpg';\n\n\nconst LANGUAGES = ['Java', 'JavaScript', 'Python', 'HTML', 'CSS/SCSS', 'C/C++', 'Bash', 'MIPS'];\n\nconst SOFTWARES = ['React', 'Git', 'LaTeX', 'MySQL', 'Firebase', 'Android Studio', 'Strapi', 'Matlab', 'MS Office'];\n\nconst FRAMEWORKS = ['Spring', 'React Native', 'Next.js', 'Express.js']\nconst MENU_PROJECTS = [\n    {label: 'Facebook'},\n    {label: 'JPMorgan Chase'},\n    {label: 'Plano Intelligence'},\n    {label: 'Kellermann Foundation'},\n    {label: 'Kumon'},\n    {label: 'NanoSpinCompute Lab'},\n    {label: 'Advanced Polymer Research Lab'},\n    {label: 'Multiscale Simulation Lab'},\n  ];\nconst CARD_PROJECTS = {\n    'Facebook': {\n        title: 'Facebook',\n        location: 'Menlo Park, CA (remote)',\n        position: 'Software Engineering Intern',\n        date: 'May - Aug 2020',\n        bullets: ['Working on the Messenger Kids Experience Team!'],\n        technologies: ['React', 'React Native', 'php', 'Android Studio']\n    },\n    'JPMorgan Chase': {\n        title: 'JPMorgan Chase & Co.',\n        location: 'Plano, TX',\n        position: 'Software Engineering Intern',\n        date: 'Jun - Aug 2019',\n        bullets: ['Worked as a Full-Stack Developer to deliver an end-to-end web application to create test data to post to Kafka topics',\n        'Developed data generation page and input validation techniques in React front-end and scheduled data creation, random data generation, and REST API in Java back-end.',\n        'Helped with connecting several endpoints and internal data models and in architecting user workflow and application functionality.',\n        'Worked with authentication protocols to enable deployment to internal cloud environment.'],\n        body: 'Worked as a Full-Stack Developer to deliver an end-to-end web application to create test data to post to Kafka topics \\n \\\n        • Developed data generation page and input validation techniques in React front-end and scheduled data creation, random data generation, and REST API in Java back-end. \\\n        • Helped with connecting several endpoints and internal data models and in architecting user workflow and application functionality. Also worked with authentication protocols to enable deployment to internal cloud environment.',\n        technologies: ['React', 'JavaScript', 'HTML', 'CSS/SCSS', 'Spring', 'Java', 'REST API']\n    },\n    'Plano Intelligence': {\n        title: 'Plano Intelligence Inc.',\n        location: 'Plano, TX',\n        position: 'Front-end Developer',\n        date: 'May – Sep 2018',\n        bullets: ['Created an Android app for threat detection. Focused on front-end decisions, troubleshooting, and development.',\n        'Developed and tested app with Android Studio and Java, enabled and connected notification database, and delivered real-time WebSocket connectivity.'],\n        body: 'Created an Android app for threat detection. Focused on front-end decisions, troubleshooting, and development.\\nDeveloped and tested app with Android Studio and Java, enabled and connected notification database, and delivered real-time WebSocket connectivity.',\n        technologies: ['Android Studio', 'Java', 'WebSocket']\n    },\n    'Kellermann Foundation': {\n        title: 'Kellermann Foundation',\n        location: 'UTD',\n        position: 'Project Manager',\n        date: 'Jan - May 2018',\n        bullets: ['Worked with the Kellermann Foundation through the Engineering Projects in Community Service (EPICS) program at UTD.',\n        'Advised technicians in Uganda on how to integrate their local database to a newly developed government database framework.',\n        'Analyzed Java and SQL source code and presented final report on findings.'],\n    },\n    'Kumon': {\n        title: 'Kumon Math and Reading Center',\n        location: 'Bedford, TX',\n        position: 'Associate/Tutor',\n        date: 'May 2016 – May 2017',\n        bullets: ['Taught children from K-10th grade in Math and English. Graded homework and created specialized lesson plans for each student.',\n        'Managed busy storefront with 30-45 students and occasional parents.'],\n        body: 'Taught children from K-10th grade in Math and English. Graded homework and created specialized lesson plans for each student.',\n    },\n    'NanoSpinCompute Lab': {\n        title: 'NanoSpinCompute Lab',\n        location: 'UTD',\n        position: 'Undergraduate Researcher',\n        date: 'Aug 2018 – Feb 2020',\n        body: 'Wrote a report on the usability and logical techniques of implementing Threshold Logic in 3D perpendicular Nanomagnetic Logic circuits.'\n    },\n    'Advanced Polymer Research Lab': {\n        title: 'Advanced Polymer Research Lab',\n        location: 'UTD',\n        position: 'Undergraduate Researcher',\n        date: 'Aug 2017 – May 2018',\n        body: 'Researched correlation between the glass transition temperature of shape memory polymers and their post-cure time through Dynamic Mechanical Analysis (DMA). Used Matlab for data analysis and visualization.',\n        technologies: ['Matlab', 'Bash']\n    },\n    'Multiscale Simulation Lab': {\n        title: 'Multiscale Simulation Lab',\n        location: 'UTD',\n        position: 'Clark Summer Researcher',\n        date: 'Jun - Aug 2017',\n        body: 'Modeled the behavior of MnO for more efficient battery material using CTMEAM. Created Bash scripts to automate simulation and testing. Used Matlab for analysis and LaTeX to write final report.',\n        technologies: ['Matlab', 'LaTeX', 'Bash']\n    }\n\n};\nfunction Work(props) {\n    const [technologies, setTechnologies] = useState([]);\n    const [menuItemChosen, setMenuItemChosen] = useState('JPMorgan Chase');\n    const [css, theme] = useStyletron();\n    const accentColorInverse = (props.lightTheme ? theme.colors.accent600: theme.colors.accent50)\n    const accentColor = (props.lightTheme ? theme.colors.accent50: theme.colors.accent600)\n    const selectedMenuItemColor = (props.lightTheme ? theme.colors.contentPrimary: theme.colors.accent50)\n\n    const StyledCode = styled('code', ({$theme}) => {\n        return {\n            paddingRight: '10px',\n        }\n    })\n    const StyledListItem = styled('li', ({$theme}) => {\n        return {\n            position: 'relative',\n            listStyle: 'none outside',\n            display: 'list-item',\n            paddingLeft: '0px',\n            marginBottom: '10px',\n            '::before' : {\n                boxSizing: 'border-box',\n                position: 'absolute',\n                left: '-20px',\n                content: \"'•'\",\n                color: accentColorInverse,\n            }\n        }\n    })\n    const StyledList = styled('ul', () => {\n        return {\n            paddingInlineStart: '30px',\n            paddingInlineEnd: '30px',\n            paddingTop: '10px'\n        }\n    })\n    const subHeadingStyles = css({\n        marginBlockEnd: '.1em',\n        marginBlockStart: '.3em',\n    })\n    const paragraphStyles = css({\n        marginBlockStart: '0',\n        marginBlockEnd: '0'\n    })\n    const headerStyles = css({\n        display: 'inline-block', marginTop:0, marginBottom: '20px', paddingTop: 0, paddingBottom:0,\n      });\n    return(\n        <React.Fragment>\n            <div style={{zIndex: 5, color: `${theme.colors.contentPrimary}`}}>\n                <Grid  gridMargins={[25,50,100]}>\n                    <Cell span={[4, 8, 12]}>\n                    <HeadingLevel>\n                    <Heading className={headerStyles}>Work Experience</Heading>\n                    </HeadingLevel>\n                    </Cell>\n                    <Cell style={{paddingRight: 0, margin: 0, display: 'flex', justifyContent: 'flex-end'}} span={[1, 2, 4]}>\n                    <StatefulMenu\n                        items={MENU_PROJECTS}\n                        onItemSelect={(item) => {setMenuItemChosen(item.item.label);}}\n                        overrides={{\n                        Option: {\n                            props: {\n                            getItemLabel: item => item.label,\n                            },\n                            style: (props) => {\n                                if(props.children.props.children == menuItemChosen) {\n                                    return {\n                                        backgroundColor: accentColor,\n                                        color:  selectedMenuItemColor,\n                                        zIndex: -1\n                                    }\n                                }\n                            },\n                        },\n                        List: {\n                            props: {\n                                $isFocusVisible: false\n                            },\n                            style: (props) => {\n                                return {\n                                height: \"20vh\",\n                                width: '20vw',\n                                boxShadow: 'none',\n                                backgroundColor: accentColor,\n                                backgroundColor: accentColor + \"33\",\n                                overflow: 'hidden',\n                                ':hover' : {\n                                    overflowY: 'scroll'\n                                }\n                                };\n                            },\n                          }\n                        }}\n                    />\n                    </Cell>\n                    <Cell span={[3,6,8]} style={{paddingRight: 0, margin: 0}}>\n                    <Card style={{width: '55vw', height: '61vh', overflowY: 'auto', boxShadow: 'rgba(0, 0, 0, 0.16) 0px 4px 16px'}}>\n                    <Grid gridGutters={0} gridMargins={[0,0,24]} gridGaps={0}>\n                        <Cell span={[3,6,8]}>\n                            <H5 style={{marginBottom: 0, marginTop: 0}}>\n                            {CARD_PROJECTS[menuItemChosen].title}\n                            </H5>\n                            <H6 style={{marginTop: 0, marginBottom: 0}}>\n                            <em>\n                            {CARD_PROJECTS[menuItemChosen].position}\n                            </em>\n                            </H6>\n                        </Cell>\n                        <Cell span={[1,2,4]}>\n                            <div style={{display: 'flex', justifyContent: 'flex-end'}}>\n                            <Paragraph1 className={paragraphStyles} >\n                            {CARD_PROJECTS[menuItemChosen].date}\n                            </Paragraph1>\n                            </div>\n                            <div style={{display: 'flex', justifyContent: 'flex-end'}}>\n                            <Paragraph1 className={paragraphStyles}>\n                            {CARD_PROJECTS[menuItemChosen].location}\n                            </Paragraph1>\n                            </div>\n                        </Cell>\n                    </Grid>\n                    <StyledBody>\n                        <StyledList>\n                        { CARD_PROJECTS[menuItemChosen].bullets ? (\n                            CARD_PROJECTS[menuItemChosen].bullets.map((bullet) => (\n                                <StyledListItem>\n                                    {bullet}\n                                </StyledListItem>\n                            ))\n                        ) : (\n                                CARD_PROJECTS[menuItemChosen].body\n                            )\n                        }\n                        </StyledList>\n                    </StyledBody>\n                    <StyledContents>\n                        {CARD_PROJECTS[menuItemChosen].technologies ? (\n                            CARD_PROJECTS[menuItemChosen].technologies.map((tech) => (\n                                <Tag closeable={false} kind='accent' variant={VARIANT.light}>\n                                    {tech}\n                                </Tag>\n                            ))\n                        ) : (CARD_PROJECTS[menuItemChosen].technologies)}\n                    </StyledContents>\n                    </Card>\n                </Cell>\n            </Grid>\n            {/* <Grid>\n            <Cell span={[4,8,12]}>\n            <HeadingLevel>\n                <HeadingLevel>\n                <H4 className={subHeadingStyles}>Languages</H4>\n                    <Paragraph1 className={paragraphStyles}>\n                        {LANGUAGES.map((l, index) => (\n                            index == LANGUAGES.length-1 ? (\n                            <StyledCode key={index}>\n                                {l}\n                            </StyledCode>\n                        ) : (\n                            <StyledCode key={index}>\n                                {l + ','}\n                            </StyledCode>\n                        )\n                        ))}\n                    </Paragraph1>\n                    <H4 className={subHeadingStyles}>Softwares</H4>\n                    <Paragraph1 className={paragraphStyles}>\n                        {SOFTWARES.map((s, index) => (\n                        index == SOFTWARES.length-1 ? (\n                            <StyledCode key={index}>\n                                {s}\n                            </StyledCode>\n                        ) : (\n                        <StyledCode key={index}>\n                            {s + ','}\n                        </StyledCode>\n                        )\n                    ))}\n                    </Paragraph1>\n                    <H4 className={subHeadingStyles}>Frameworks</H4>\n                    <Paragraph1 className={paragraphStyles}>\n                        {FRAMEWORKS.map((f, index) => (\n                            index == FRAMEWORKS.length-1 ? (\n                                <StyledCode key={index}>\n                                    {f}\n                                </StyledCode>\n                            ) : (\n                                 <StyledCode key={index}>\n                                    {f + ','}\n                                </StyledCode>\n                            )\n                        ))}\n                    </Paragraph1>\n                </HeadingLevel>\n                </HeadingLevel>\n                </Cell>\n                </Grid> */}\n            </div>\n\n        </React.Fragment>\n    );\n};\n\nexport default Work","import React from 'react';\nimport './App.scss';\nimport {Button, KIND, SIZE, SHAPE} from 'baseui/button';\nimport {DarkTheme, LightTheme, BaseProvider, styled} from 'baseui';\nimport {Layer} from 'baseui/layer';\nimport {useStyletron} from 'baseui';\nimport {Grid, Cell, BEHAVIOR, ALIGNMENT} from 'baseui/layout-grid';\nimport {createTheme, createDarkTheme} from 'baseui';\n\n\nimport 'react-typist/dist/Typist.css';\n\nimport Header from './components/header'\nimport NavBar from './components/navBar';\nimport About from './components/about';\nimport Blobs from './components/blobs';\nimport Work from './components/work';\n\n\nconst Centered = styled('div', ({$theme}) => {\n  return {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%',\n    width: '100vw',\n    paddingBottom: '200px',\n    scrollMarginTop: '125px',\n  };\n});\n\nconst THEME = {\n  light: 'light',\n  dark: 'dark',\n};\n\n// theme: https://coolors.co/f6ddc5-ffcdb2-ffb4a2-f2a69f-e5989b-b5838d-917681-6d6875-4a4754\n\nconst primitives = {\n  accent: '#F6DDC5',\n  accent50: '#FFCDB2',\n  accent100: '#FFB4A2',\n  accent200: '#F2A69F',\n  accent300: '#E5989B',\n  accent400: '#B5838D',\n  accent500: '#917681',\n  accent600: '#6D6875',\n  accent700: '#4A4754',\n}\n\n\nconst lightTheme = createTheme(primitives);\nconst darkTheme = createDarkTheme(primitives);\n\n\n\nfunction App() {\n  const [theme, setTheme] = React.useState(THEME.light);\n  const [toggle, setToggle] = React.useState(false);\n  const [css, themeVar] = useStyletron();\n  const BackgroundStyles = styled('div', ({$theme}) => {\n    return {\n      backgroundColor: $theme.colors.background\n    }\n  })\n  return (\n      <BaseProvider theme={theme === THEME.light ? lightTheme : darkTheme}>\n        <Blobs lightTheme={theme === THEME.light ? true : false} />\n        <BackgroundStyles>\n          <Layer>\n            <NavBar \n            toggleChecked={toggle} \n            toggleOnChange={e => {\n              let nextToggle = toggle;\n              nextToggle = e.currentTarget.checked;\n              setToggle(nextToggle);\n              setTheme(theme === THEME.light ? THEME.dark : THEME.light);}}\n            lightTheme={theme === THEME.light ? true : false}\n            themeName={theme === THEME.light ? 'dark mode' : 'light mode'}\n            />\n          </Layer>\n          <Centered>\n            <Header lightTheme={theme === THEME.light ? true : false}/>\n          </Centered>\n          <Centered id=\"about\" >\n            <About lightTheme={theme === THEME.light ? true : false}/>\n          </Centered>\n          <Centered id=\"work\">\n            <Work lightTheme={theme === THEME.light ? true : false}/>\n          </Centered>\n        </BackgroundStyles>\n      </BaseProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport {Client as Styletron} from 'styletron-engine-atomic';\nimport {Provider as StyletronProvider} from 'styletron-react';\n\nconst engine = new Styletron();\n\n\nReactDOM.render(\n  <StyletronProvider value={engine}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </StyletronProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}