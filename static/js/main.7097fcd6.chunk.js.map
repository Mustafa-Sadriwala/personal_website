{"version":3,"sources":["components/navBar.js","App.js","index.js"],"names":["renderItem","item","label","MAIN_NAV","icon","Icon","mapItemToNode","mapItemToString","ChevronDown","navExitIcon","Delete","nav","NavBar","props","useStyletron","containerStyles","css","boxSizing","width","position","top","left","className","appDisplayName","mainNav","onNavItemSelect","console","log","engine","Styletron","Centered","styled","display","justifyContent","alignItems","height","marginTop","THEME","App","React","useState","theme","setTheme","value","LightTheme","DarkTheme","onClick","kind","KIND","primary","size","SIZE","default","shape","SHAPE","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8WAWA,SAASA,EAAWC,GAClB,OAAOA,EAAKC,MAEd,IAAMC,EAAW,CACf,CACEC,KAAMC,IACNJ,KAAM,CAACC,MAAO,kBACdI,cAAeN,EACfO,gBAAiBP,GAEnB,CACEI,KAAMC,IACNJ,KAAM,CAACC,MAAO,kBACdI,cAAeN,EACfO,gBAAiBP,GAEnB,CACEI,KAAMI,IACNP,KAAM,CAACC,MAAO,kBACdI,cAAeN,EACfO,gBAAiBP,EACjBS,YAAaC,IACbC,IAAK,CACH,CACEP,KAAMC,IACNJ,KAAM,CAACC,MAAO,mBACdI,cAAeN,EACfO,gBAAiBP,GAEnB,CACEI,KAAMC,IACNJ,KAAM,CAACC,MAAO,mBACdI,cAAeN,EACfO,gBAAiBP,MAgCVY,MA1Bf,SAAgBC,GAAQ,IAAD,EACPC,cACRC,GAAkBC,EAFH,qBAEO,CAC1BC,UAAW,aACXC,MAAO,QACPC,SAAU,QACVC,IAAK,IACLC,KAAM,MAER,OACE,gBAAC,WAAD,KACI,gBAAC,IAAD,KACE,uBAAKC,UAAWP,GACd,gBAAC,IAAD,CACEQ,eAAe,oBACfC,QAASrB,EACTsB,gBAAiB,YAAa,IAAXxB,EAAU,EAAVA,KACjByB,QAAQC,IAAI1B,UCzDtB2B,EAAS,IAAIC,IAEbC,EAAWC,YAAO,MAAO,CAC7BC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,OACRC,UAAW,UAGPC,EACG,QADHA,EAEE,OA4BOC,MAxBf,WAAgB,IAAD,EACaC,IAAMC,SAASH,GAD5B,mBACNI,EADM,KACCC,EADD,KAEb,OACE,kBAAC,IAAD,CAAmBC,MAAOf,GACxB,kBAAC,IAAD,CAAca,MAAOA,IAAUJ,EAAcO,IAAaC,KAC1D,kBAAC,EAAD,MACE,kBAACf,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEgB,QAAS,kBAAMJ,EAASD,IAAUJ,EAAcA,EAAaA,IAC7DU,KAAMC,IAAKC,QACXC,KAAMC,IAAKC,QACXC,MAAOC,IAAMF,SAJf,uBC7BZG,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.7097fcd6.chunk.js","sourcesContent":["import * as React from 'react';\nimport {useStyletron} from 'baseui';\nimport {Button} from 'baseui/button';\nimport {Layer} from 'baseui/layer';\nimport {\n  ChevronDown,\n  Delete,\n  Upload as Icon,\n} from 'baseui/icon';\nimport {Unstable_AppNavBar as AppNavBar} from 'baseui/app-nav-bar';\n\nfunction renderItem(item) {\n  return item.label;\n}\nconst MAIN_NAV = [\n  {\n    icon: Icon,\n    item: {label: 'Primary alpha1'},\n    mapItemToNode: renderItem,\n    mapItemToString: renderItem,\n  },\n  {\n    icon: Icon,\n    item: {label: 'Primary alpha2'},\n    mapItemToNode: renderItem,\n    mapItemToString: renderItem,\n  },\n  {\n    icon: ChevronDown,\n    item: {label: 'Primary alpha3'},\n    mapItemToNode: renderItem,\n    mapItemToString: renderItem,\n    navExitIcon: Delete,\n    nav: [\n      {\n        icon: Icon,\n        item: {label: 'Secondary menu1'},\n        mapItemToNode: renderItem,\n        mapItemToString: renderItem,\n      },\n      {\n        icon: Icon,\n        item: {label: 'Secondary menu2'},\n        mapItemToNode: renderItem,\n        mapItemToString: renderItem,\n      },\n    ],\n  }\n];\n\nfunction NavBar(props) {\n  const [css] = useStyletron();\n  const containerStyles = css({\n    boxSizing: 'border-box',\n    width: '100vw',\n    position: 'fixed',\n    top: '0',\n    left: '0',\n  });\n  return (\n    <React.Fragment>\n        <Layer>\n          <div className={containerStyles}>\n            <AppNavBar\n              appDisplayName=\"Mustafa Sadriwala\"\n              mainNav={MAIN_NAV}\n              onNavItemSelect={({item}) => {\n                console.log(item);\n              }}\n            />\n          </div>\n        </Layer>\n    </React.Fragment>\n  );\n};\n\nexport default NavBar","import React from 'react';\nimport './App.scss';\nimport {Button, KIND, SIZE, SHAPE} from 'baseui/button';\nimport {Client as Styletron} from 'styletron-engine-atomic';\nimport {Provider as StyletronProvider} from 'styletron-react';\nimport {DarkTheme, LightTheme, BaseProvider, styled} from 'baseui';\nimport {Layer} from 'baseui/layer';\n\nimport NavBar from './components/navBar';\n\nconst engine = new Styletron();\n\nconst Centered = styled('div', {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  height: '100%',\n  marginTop: '100px',\n});\n\nconst THEME = {\n  light: 'light',\n  dark: 'dark',\n};\n\n\nfunction App() {\n  const [theme, setTheme] = React.useState(THEME.light);\n  return (\n    <StyletronProvider value={engine}>\n      <BaseProvider theme={theme === THEME.light ? LightTheme : DarkTheme}>\n      <NavBar />\n        <Centered>\n          <Layer>\n            <Button\n              onClick={() => setTheme(theme === THEME.light ? THEME.dark : THEME.light)}\n              kind={KIND.primary}\n              size={SIZE.default}\n              shape={SHAPE.default}\n            >\n              Change themes!\n            </Button>\n\n          </Layer>\n        </Centered>\n      </BaseProvider>\n    </StyletronProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}