{"version":3,"sources":["components/navBar.js","App.js","index.js"],"names":["NavBar","props","useStyletron","containerStyles","css","boxSizing","width","position","top","left","className","$align","ALIGN","margin","center","right","href","style","checked","toggleChecked","onChange","toggleOnChange","checkmarkType","STYLE_TYPE","toggle_round","labelPlacement","themeName","engine","Styletron","Centered","styled","display","justifyContent","alignItems","height","marginTop","THEME","App","React","useState","theme","setTheme","toggle","setToggle","value","LightTheme","DarkTheme","e","nextToggle","currentTarget","onClick","kind","KIND","primary","size","SIZE","default","shape","SHAPE","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qYAqEeA,MArDf,SAAgBC,GAAQ,IAAD,EACPC,cACRC,GAAkBC,EAFH,qBAEO,CAC1BC,UAAW,aACXC,MAAO,QACPC,SAAU,QACVC,IAAK,IACLC,KAAM,MAER,OACE,gBAAC,WAAD,KACI,gBAAC,IAAD,KACE,uBAAKC,UAAWP,GAChB,gBAAC,IAAD,KACA,gBAAC,IAAD,CAAsBQ,OAAQC,IAAMH,MAClC,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAII,OAAQ,GAAZ,uBAKJ,gBAAC,IAAD,CAAsBF,OAAQC,IAAME,SACpC,gBAAC,IAAD,CAAsBH,OAAQC,IAAMG,OAClC,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAYC,KAAK,gBAAjB,iBAIF,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAYA,KAAK,gBAAjB,kBAKJ,gBAAC,IAAD,CAAsBL,OAAQC,IAAMG,MAAOE,MAAO,CAAC,YAAe,SAChE,gBAAC,IAAD,KACE,gBAAC,IAAD,CACEC,QAASjB,EAAMkB,cACfC,SAAUnB,EAAMoB,eAChBC,cAAeC,IAAWC,aAC1BC,eAAe,OAEdxB,EAAMyB,kBChDjBC,EAAS,IAAIC,IAEbC,EAAWC,YAAO,MAAO,CAC7BC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,OACRC,UAAW,UAGPC,EACG,QADHA,EAEE,OAqCOC,MAjCf,WAAgB,IAAD,EACaC,IAAMC,SAASH,GAD5B,mBACNI,EADM,KACCC,EADD,OAEeH,IAAMC,UAAS,GAF9B,mBAENG,EAFM,KAEEC,EAFF,KAGb,OACE,kBAAC,IAAD,CAAmBC,MAAOjB,GACxB,kBAAC,IAAD,CAAca,MAAOA,IAAUJ,EAAcS,IAAaC,KAC1D,kBAAC,EAAD,CACE3B,cAAeuB,EACfrB,eAAgB,SAAA0B,GACd,IAAIC,EACJA,EAAaD,EAAEE,cAAc/B,QAC7ByB,EAAUK,GACVP,EAASD,IAAUJ,EAAcA,EAAaA,IAChDV,UAAWc,IAAUJ,EAAc,YAAc,eAEjD,kBAACP,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEqB,QAAS,kBAAMT,EAASD,IAAUJ,EAAcA,EAAaA,IAC7De,KAAMC,IAAKC,QACXC,KAAMC,IAAKC,QACXC,MAAOC,IAAMF,SAJf,uBCtCZG,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.e23cd192.chunk.js","sourcesContent":["import * as React from 'react';\nimport {useStyletron} from 'baseui';\nimport {Button} from 'baseui/button';\nimport {Layer} from 'baseui/layer';\nimport {\n  HeaderNavigation,\n  ALIGN,\n  StyledNavigationList,\n  StyledNavigationItem\n} from \"baseui/header-navigation\";\nimport { StyledLink } from \"baseui/link\";\nimport {Checkbox, STYLE_TYPE} from 'baseui/checkbox';\nimport {H5} from 'baseui/typography'\n\n\n\nfunction NavBar(props) {\n  const [css] = useStyletron();\n  const containerStyles = css({\n    boxSizing: 'border-box',\n    width: '100vw',\n    position: 'fixed',\n    top: '0',\n    left: '0',\n  });\n  return (\n    <React.Fragment>\n        <Layer>\n          <div className={containerStyles}>\n          <HeaderNavigation>\n          <StyledNavigationList $align={ALIGN.left}>\n            <StyledNavigationItem>\n              <H5 margin={0}>\n                Mustafa Sadriwala\n              </H5>\n            </StyledNavigationItem>\n          </StyledNavigationList>\n          <StyledNavigationList $align={ALIGN.center} />\n          <StyledNavigationList $align={ALIGN.right}>\n            <StyledNavigationItem>\n              <StyledLink href=\"#basic-link1\">\n                Tab Link One\n              </StyledLink>\n            </StyledNavigationItem>\n            <StyledNavigationItem>\n              <StyledLink href=\"#basic-link2\">\n                Tab Link Two\n              </StyledLink>\n            </StyledNavigationItem>\n          </StyledNavigationList>\n          <StyledNavigationList $align={ALIGN.right} style={{'marginRight': '30px'}}>\n            <StyledNavigationItem>\n              <Checkbox\n                checked={props.toggleChecked}\n                onChange={props.toggleOnChange}\n                checkmarkType={STYLE_TYPE.toggle_round}\n                labelPlacement=\"top\"\n              >\n                {props.themeName}\n              </Checkbox>\n            </StyledNavigationItem>\n          </StyledNavigationList>\n          </HeaderNavigation>\n          </div>\n        </Layer>\n    </React.Fragment>\n  );\n};\n\nexport default NavBar","import React from 'react';\nimport './App.scss';\nimport {Button, KIND, SIZE, SHAPE} from 'baseui/button';\nimport {Client as Styletron} from 'styletron-engine-atomic';\nimport {Provider as StyletronProvider} from 'styletron-react';\nimport {DarkTheme, LightTheme, BaseProvider, styled} from 'baseui';\nimport {Layer} from 'baseui/layer';\n\nimport NavBar from './components/navBar';\n\nconst engine = new Styletron();\n\nconst Centered = styled('div', {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  height: '100%',\n  marginTop: '100px',\n});\n\nconst THEME = {\n  light: 'light',\n  dark: 'dark',\n};\n\n\nfunction App() {\n  const [theme, setTheme] = React.useState(THEME.light);\n  const [toggle, setToggle] = React.useState(false);\n  return (\n    <StyletronProvider value={engine}>\n      <BaseProvider theme={theme === THEME.light ? LightTheme : DarkTheme}>\n      <NavBar \n        toggleChecked={toggle} \n        toggleOnChange={e => {\n          let nextToggle = toggle;\n          nextToggle = e.currentTarget.checked;\n          setToggle(nextToggle);\n          setTheme(theme === THEME.light ? THEME.dark : THEME.light);}}\n        themeName={theme === THEME.light ? 'dark mode' : 'light mode'}\n      />\n        <Centered>\n          <Layer>\n            <Button\n              onClick={() => setTheme(theme === THEME.light ? THEME.dark : THEME.light)}\n              kind={KIND.primary}\n              size={SIZE.default}\n              shape={SHAPE.default}\n            >\n              Change themes!\n            </Button>\n\n          </Layer>\n        </Centered>\n      </BaseProvider>\n    </StyletronProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}