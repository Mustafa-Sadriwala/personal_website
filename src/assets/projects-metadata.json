[
  {
    "featured": true,
    "name": "Personal Website",
    "position": "Front-end Developer",
    "dateString": "May '20 - Present",
    "startDate": "2020-05-01",
    "endDate": "present",
    "description": "Created a personal website from scratch using React, HTML, CSS and Node.js. Utilized Uber's Base-Web UI framework and Styletron. Hosted the website on Github pages",
    "link": "https://mustafa-sadriwala.github.io/personal_website/",
    "github": "https://github.com/Mustafa-Sadriwala/personal_website/",
    "thumbnail": "https://cdn.worldvectorlogo.com/logos/react.svg",
    "img": "https://user-images.githubusercontent.com/35875225/82777079-a733a100-9e12-11ea-81cc-be01304bd21b.png",
    "academic": false,
    "tags": ["React", "JavaScript", "HTML", "CSS"]
  },
  {
    "featured": true,
    "name": "CM Website",
    "organization": "UTD Comet Marketing",
    "position": "Director of Web Design",
    "dateString": "Aug '18 - Present",
    "startDate": "2018-08-01",
    "endDate": "present",
    "description": "Created and maintain Comet Marketing website from scratch with one peer using React, HTML, and CSS for the front-end and Strapi and MongoDB for the back-end. Deployed back-end on Heroku for simple content management and deployed front-end on Digital Ocean.",
    "link": "http://utdcometmarketing.com/",
    "thumbnail": "https://cdn.worldvectorlogo.com/logos/react.svg",
    "img": "https://user-images.githubusercontent.com/35875225/82779553-1b257780-9e1a-11ea-83fa-8a928c52e23b.png",
    "github": "https://github.com/comet-marketing/cometmarketing",
    "academic": false,
    "tags": ["React", "JavaScript", "CSS", "HTML", "Next.js"]
  },
  {
    "featured": true,
    "name": "RCPT",
    "organization": "TAMUHack '19",
    "position": "Back-end Developer",
    "dateString": "Feb '19",
    "startDate": "2019-02-19",
    "endDate": "2019-02-20",
    "description": "Developed RCPT, a mobile app to automatically categorize and analyze receipts to track finances and help college students budget. Used JavaScript with NodeJS to develop sorting algorithms for times and categories. Implemented a microservices architecture by deploying on Heroku and connecting with other components using REST API. Won Capital One's prize for Best Financial Hack.",
    "github": "https://github.com/Mustafa-Sadriwala/rcpt-visualizer",
    "link": "https://snack.expo.io/@mms170530/github.com-almadireddy-rcpt",
    "thumbnail": "https://cdn.worldvectorlogo.com/logos/javascript.svg",
    "academic": false,
    "tags": ["React-Native", "JavaScript", "Node.js", "Heroku"]
  },
  {
    "featured": false,
    "name": "SwearBot",
    "organization": "HackTX '18",
    "position": "Front-end Developer",
    "dateString": "Oct '18",
    "startDate": "2018-10-18",
    "endDate": "2018-10-19",
    "description": "Created SwearBot, an electronic swear jar that detects nearby swears and then donates to a chosen charity. Built using HTML and CSS for the front-end and Python, a mic, and a Raspberry Pi for the back-end.",
    "github": "https://github.com/Mustafa-Sadriwala/Swear-Jar-Front-End",
    "thumbnail": "https://cdn.worldvectorlogo.com/logos/html-5.svg",
    "img": "https://user-images.githubusercontent.com/35875225/82782412-e3bac900-9e21-11ea-9910-dd060e6f8ddd.png",
    "academic": false,
    "tags": ["HTML", "CSS", "Python", "Raspberry Pi"]
  },
  {
    "featured": false,
    "name": "Green Racoon",
    "organization": "EarthHack '18",
    "position": "Front-end Developer",
    "dateString": "Apr '18",
    "startDate": "2018-04-22",
    "endDate": "2018-04-23",
    "description": "Created Green Raccoon, a cross-platform app implemented with React-Native that uses the Google Computer Vision API to detect whether an object is recyclable.",
    "github": "https://github.com/Mustafa-Sadriwala/greenraccoon",
    "link": "https://snack.expo.io/Bys9hVqnG",
    "img": "https://github.com/sid-devic/greenraccoon/blob/master/Images/gh_1.png?raw=true",
    "thumbnail": "https://cdn.worldvectorlogo.com/logos/react.svg",
    "academic": false,
    "tags": ["React-Native", "JavaScript"]
  },
  {
    "featured": false,
    "name": "AI Pacman Project",
    "organization": "CS 4365: Artificial Intelligence",
    "position": "",
    "dateString": "March '20 - May '20",
    "startDate": "2020-03-01",
    "endDate": "2020-05-10",
    "description": "A game of Pacman Capture The Flag (CTF) involves 2 teams each comprised of 2 agents and the goal is to collect food from the opponentâ€™s side of the map and bring it back to your own without being eaten. Working alongside my project partner, we created a solution with 2 separate agents, one offensive and the other defensive. Initially, both began as goal-based agents, but as we advanced their rationality we realized that they had different goals in different conditions. Thus, we created a modular, decision-making hierarchy based on the concept of reflex agents. Our team placed first in the pre-final and final tournaments, going undefeated both times. We created a final report (linked) detailing our methods. For academic integrity purposes, our code is not made public.",
    "github": "",
    "link": "pdf in assets",
    "img": "https://www.cs.umd.edu/class/spring2013/cmsc421/projects/p5/capture_the_flag.png",
    "thumbnail": "https://cdn.worldvectorlogo.com/logos/python-5.svg",
    "academic": true,
    "tags": ["Python", "AI", "Academic"]
  },
  {
    "featured": false,
    "name": "CSP Solver",
    "organization": "CS 4365: Artificial Intelligence",
    "position": "",
    "dateString": "Feb '20",
    "startDate": "2020-01-15",
    "endDate": "2020-02-17",
    "description": "Implemented a java program that would solve a given Constraint Satisfaction Problem (CSP). Took into account variables, domains, constraints and optional forward checking. When choosing a variable during the search process applied the most constrained variable heuristic, breaking ties using the most constraining variable heuristic. When choosing a value applied the least constraining vlue heuristic. Program outputs the branches visited in the search tree and the final solution. For academic integrity purposes, my code is not published.",
    "github": "",
    "link": "",
    "img": "",
    "thumbnail": "https://cdn.worldvectorlogo.com/logos/java-4.svg",
    "academic": true,
    "tags": ["Java", "AI", "Academic"]
  },
  {
    "featured": false,
    "name": "Theorem Prover",
    "organization": "CS 4365: Artificial Intelligence",
    "position": "",
    "dateString": "Mar '20",
    "startDate": "2020-02-17",
    "endDate": "2020-03-10",
    "description": "Implemented a theorem prover for clausal logic using the resolution principle in java. Given sentences in a knowledge base in the form of Disjunctive Normal Form clauses, my program outputs the final knowledge base with all resulting clauses alongside their parent clauses that resolved into them. The last clause will either be a Contradiction thus proving the original theorem or a normal clause meaning that no contradiction could be reached. For academic integrity purposes, my code is not published.",
    "github": "",
    "link": "",
    "img": "",
    "thumbnail": "https://cdn.worldvectorlogo.com/logos/java-4.svg",
    "academic": true,
    "tags": ["Java", "AI", "Academic"]
  },
  {
    "featured": false,
    "name": "Quine McClusky Solver",
    "organization": "CS 4341: Digital Logic and Computer Design Honors",
    "position": "",
    "dateString": "Feb '20",
    "startDate": "2020-01-15",
    "endDate": "2020-03-01",
    "description": "Implemented the Quine McClusky Algorithm to solve for the minimized Boolean function of a given set of minterms. The program takes in the number of variables, followed by all the minterms and then \"don't cares\" and outputs a minimal boolean function in Disjunctive Normal Form. For academic integrity purposes, my code is not published.",
    "github": "",
    "link": "",
    "img": "",
    "thumbnail": "https://cdn.worldvectorlogo.com/logos/java-4.svg",
    "academic": true,
    "tags": ["Java", "Digital Logic", "Academic"]
  },
  {
    "featured": false,
    "name": "Circuit Simulator",
    "organization": "CS 4341: Digital Logic and Computer Design Honors",
    "position": "",
    "dateString": "Apr '20",
    "startDate": "2020-03-15",
    "endDate": "2020-05-01",
    "description": "Created a logical circuit simulator in java. The program will take in a circuit configuration including input/output variables, gates, and wiring information. Then it will process input information for subsequent clock cycles and output the appropriate output from the circuit. It can handle both combinational and synchronous sequential circuits. For academic integrity purposes, my code is not published.",
    "github": "",
    "link": "",
    "img": "",
    "thumbnail": "https://cdn.worldvectorlogo.com/logos/java-4.svg",
    "academic": true,
    "tags": ["Java", "Digital Logic", "Academic"]
  },
  {
    "featured": false,
    "name": "Pet Salon Database",
    "organization": "CS 4347: Database Systems",
    "position": "",
    "dateString": "Jan '20 - May '20",
    "startDate": "2020-01-15",
    "endDate": "2020-05-06",
    "description": "Created a database model for a fictional Pet Grooming Salon as part of a group term project. Started by scoping out stakeholders, creating business rules, and making data volume assumptions. Then we identified relationships, primary and foreign keys, and created both a Enhanced Entity-Relationship Diagram (EERD) and a Schema Diagram. Finally we implemented our model with MySQL, populated it with dummy data using Python and JavaScript scripts, and connected it to a React front-end using ExpressJS that could fire canned transactions and show the current state of the database. We were meant to do a final presentation but due to COVID-related closures we instead submitted a virtual presentation (linked).",
    "github": "https://github.com/Mustafa-Sadriwala/petCompany",
    "link": "https://web.microsoftstream.com/video/a7ea5202-881e-4291-a03e-9153583b5dda",
    "img": "https://i.ibb.co/M79HS0Q/image18.png",
    "thumbnail": "https://cdn.worldvectorlogo.com/logos/mysql-7.svg",
    "academic": true,
    "tags": ["MySQL", "Database", "React", "Python", "JavaScript", "Academic"]
  },
  {
    "featured": false,
    "name": "Ethics Paper on GPT-2",
    "organization": "ECS 2361: Social Issues and Ethics in Science and Technology Honors",
    "position": "",
    "dateString": "Sep '19 - Nov '19",
    "startDate": "2019-09-10",
    "endDate": "2019-11-06",
    "description": "Wrote and researched a detailed ethical analysis of the novel release methods for large language models first practiced by OpenAI with the staged release of GPT-2 as part of a term paper. The 11-page paper dives into topics of Dual-use research, release methods, risk analysis, cooperation, and openness within the AI Research Community and focuses on the decision-making for OpenAI's staged release and its consequences.",
    "github": "",
    "link": "pdf in assets",
    "img": "https://openai.com/content/images/2019/05/openai-cover.png",
    "thumbnail": "https://dwglogo.com/wp-content/uploads/2019/03/1600px-OpenAI_logo.png",
    "academic": true,
    "tags": ["AI", "Ethics", "Technical Writing"]
  },
  {
    "featured": false,
    "name": "OS Projects",
    "organization": "CS 4348: Operating Systems Concepts Honors",
    "position": "",
    "dateString": "Aug '19 - Dec '19",
    "startDate": "2019-08-22",
    "endDate": "2019-12-14",
    "description": "Implemented a variety of Operating System projects for class. Our first project was to create a C program to copy the contents of two directories to each other by creating child processes and piping file contents between them and the parent. Another project was to solve the issue of deadlocks by simulating the \"Dining Philosopher's Problem\". For my project I chose to only allow four of the five philosophers have one of the shared resources at any given time so that at no point could all 5 be waiting on each other. Our last project had us simulate an LRU cache and secondary storage through socket connections and an external file. For academic integrity purposes, my code is not published.",
    "github": "",
    "link": "",
    "img": "",
    "thumbnail": "https://cdn.worldvectorlogo.com/logos/c-2975.svg",
    "academic": true,
    "tags": ["OS", "Unix", "C", "Java", "Sockets", "Academic"]
  },
  {
    "featured": false,
    "name": "GWC Website",
    "organization": "UTD Girls Who Code",
    "position": "Director of Logistics",
    "dateString": "Aug '20 - Mar '21",
    "startDate": "2020-08-24",
    "endDate": "2021-03-14",
    "description": "Created, designed, and deployed a single-page website for UTD Girls Who Code. Worked to maintain strict branding guidelines and built using React, HTML, CSS, JavaScript, and the Grommet UI Framework.",
    "github": "https://github.com/utd-gwc/utd-gwc.github.io",
    "link": "http://utdgwc.com/",
    "img": "https://media.giphy.com/media/nlSv36epMvzUGWYmlP/giphy.gif",
    "thumbnail": "https://cdn.worldvectorlogo.com/logos/react.svg",
    "academic": false,
    "tags": ["React", "JavaScript", "HTML", "CSS"]
  }
]
